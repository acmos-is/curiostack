/*
 * MIT License
 *
 * Copyright (c) 2017 Choko (choko@curioswitch.org)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:3.1.0'
        classpath 'com.palantir:gradle-baseline-java:0.11.1'
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE'
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.9'
    }
}

// Provides useful tasks like 'clean', 'assemble' to the root project.
apply plugin: 'base'

apply plugin: 'com.palantir.baseline-config'
apply plugin: 'com.palantir.baseline-idea'

apply from: './build-java.gradle'

allprojects {
    plugins.withType(JavaPlugin) {
        license {
            header rootProject.file('LICENSE')
        }
    }
    plugins.withType(com.google.protobuf.gradle.ProtobufPlugin) {
        // Protobuf plugin doesn't add proto sourceset to allSource, which seems like an omission.
        // We add it to make sure license plugin picks up the files.
        sourceSets.each({ sourceSet ->
            sourceSet.allSource.source(sourceSet.proto)
        })
        license {
            mapping {
                proto = 'JAVADOC_STYLE'
            }
        }
    }
}
